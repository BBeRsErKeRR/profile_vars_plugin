[defaults]
inventory = inventory
forks = 5
timeout = 30
poll_interval = 5
internal_poll_interval = 0.05
#display_skipped_hosts = False
host_key_checking = False
retry_files_enabled = False
accept_hostkey = True
hash_behaviour = merge
gathering = smart
any_errors_fatal = True
# This only affects the gathering done by a play's gather_facts directive,
# by default gathering retrieves all facts subsets
# all - gather all subsets
# network - gather min and network facts
# hardware - gather hardware facts (longest facts to retrieve)
# virtual - gather min and virtual facts
# facter - import facts from facter
# ohai - import facts from ohai
# You can combine them using comma (ex: network,virtual)
# You can negate them using ! (ex: !hardware,!facter,!ohai)
# A minimal set of facts is always gathered.
# hardware facts need from crab....
gather_subset = all,!facter,!virtual,!ohai
fact_caching = jsonfile
fact_caching_connection = /tmp/cache_ansible_facts
fact_caching_timeout = 86400
# Use the stdout_callback when running ad-hoc commands.
bin_ansible_callbacks = True

force_handlers = yes

# filter_plugins = /ansible/plugins/filter_plugins
;vars_plugins = ./test_vars_plugins

#, timer, profile_tasks,junit_report
callbacks_enabled=profile_vars,timer
callback_plugins = callback
stdout_callback = debug

# lookup_plugins = /ansible/plugins/lookup_plugins
# library = /ansible/library
;module_utils = /ansible/plugins/module_utils

force_color = 1

# format of string {{ ansible_managed }} available within Jinja2
# templates indicates to users editing templates files will be replaced.
# replacing {file}, {host} and {uid} and strftime codes with proper values.
ansible_managed = Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}
# {file}, {host}, {uid}, and the timestamp can all interfere with idempotence
# in some situations so the default is a static string:
#ansible_managed = Ansible managed

[privilege_escalation]
# Add -S flag to use sudo flags with pipelining https://github.com/ansible/ansible/issues/15297
become_flags = -H -i -S

[colors]
verbose = bright blue
#highlight = white
#warn = bright purple
#error = red
debug = cyan
#deprecate = purple
#skip = cyan
#unreachable = red
ok = normal
# green
changed = normal
# yellow
#diff_add = green
#diff_remove = red
#diff_lines = cyan

[ssh_connection]
# Number of times to retry an SSH connection to a host, in case of UNREACHABLE.
# For each retry attempt, there is an exponential backoff,
# so after the first attempt there is 1s wait, then 2s, 4s etc. up to 30s (max).
retries = 3

# ssh arguments to use
# Leaving off ControlPersist will result in poor performance, so use
# paramiko on older platforms rather than removing it, -C controls compression use
# Options: -o ForwardAgent=yes -o PreferredAuthentications=password  -o PubkeyAuthentication=no found in
# https://github.com/ansible/ansible/issues/35698
# TODO: set options -o PreferredAuthentications=password  -o PubkeyAuthentication=no is optional
ssh_args = -C -o ControlMaster=auto -o ControlPersist=60s -o ForwardAgent=yes -o PreferredAuthentications=password  -o PubkeyAuthentication=no -o UserKnownHostsFile=/dev/null

# Enabling pipelining reduces the number of SSH operations required to
# execute a module on the remote server. This can result in a significant
# performance improvement when enabled, however when using "sudo:" you must
# first disable 'requiretty' in /etc/sudoers
#
# By default, this option is disabled to preserve compatibility with
# sudoers configurations that have requiretty (the default on many distros).
control_path = /tmp/ansible-ssh-%%h-%%p-%%r
